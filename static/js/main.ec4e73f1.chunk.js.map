{"version":3,"sources":["components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","console","log","employees","map","employee","src","picture","medium","alt","name","first","last","phone","email","App","useState","setEmployees","filteredemployees","setFilteredemployees","useEffect","axios","get","then","response","data","results","className","type","onChange","e","userInput","target","value","filteredList","filter","item","toLowerCase","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAkDeA,EAhDO,SAACC,GAIhB,OAFHC,QAAQC,IAAIF,GAGR,qCACI,8DAMA,kCACI,+BACI,uCACA,sCACA,8CACA,0CAGAA,EAAMG,UAAUC,KACZ,SAAAC,GACI,OAAQ,+BAEJ,6BACI,qBAAKC,IAAKD,EAASE,QAAQC,OAAQC,IAAI,cAE3C,6BACKJ,EAASK,KAAKC,MAAQ,IAAMN,EAASK,KAAKE,OAE/C,6BACKP,EAASQ,QAEd,6BACKR,EAASS,qBC2C/BC,MAtEf,WAAe,MAEqBC,mBAAS,IAF9B,mBAENb,EAFM,KAEKc,EAFL,OAIqCD,mBAAS,IAJ9C,mBAINE,EAJM,KAIaC,EAJb,KA4Cb,OAvCEC,qBAAU,WACVC,IACGC,IAAI,gDACJC,MAAK,SAACC,GACLP,EAAa,YAAIO,EAASC,KAAKC,UAC/BP,EAAqB,YAAIK,EAASC,KAAKC,UACvCzB,QAAQC,IAAIsB,QAEf,IAgCD,sBAAKG,UAAU,MAAf,UAEJ,8BACgB,oDAIJ,8BACI,+BACI,uBAAOC,KAAK,SAASC,SAtCtC,SAAsBC,GAErB7B,QAAQC,IAAIC,GAEZ,IAAM4B,EAAYD,EAAEE,OAAOC,MAE3BhC,QAAQC,IAAI6B,GAEZ,IAAMG,EAAe/B,EAAUgC,QAAO,SAAAC,GAGlC,OAFFnC,QAAQC,IAAIkC,EAAK1B,KAAKE,KAAKyB,eAC3BpC,QAAQC,IAAI6B,EAAUM,eAChBD,EAAK1B,KAAKE,KAAKyB,gBAAkBN,EAAUM,iBAMnDpC,QAAQC,IAAIgC,GAEZf,EAAqBe,IAmBwCI,YAAY,iCAMjE,8BACE,mEAGR,cAAC,EAAD,CAAenC,UAAWe,QC7DjBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ec4e73f1.chunk.js","sourcesContent":["import React from 'react'\r\n//setting up new component for table, filter and search\r\nconst EmployeeTable = (props) => {\r\n    //check to see data is pulling from API\r\n    console.log(props);\r\n    \r\n       return (\r\n        <>\r\n            <h1>Corporate Employee Directory</h1>\r\n\r\n            {/* creates a search box for filtering and a button to sort the directory by last name. */}\r\n            \r\n\r\n            {/* Table with headings and map functionality to render specific parts of data from the object  */}\r\n            <table>\r\n                <tr>\r\n                    <th>Image</th>\r\n                    <th>Name</th>\r\n                    <th>Phone Number</th>\r\n                    <th>Email</th>\r\n                </tr>\r\n                {\r\n                    props.employees.map(\r\n                        employee => {\r\n                            return (<tr>\r\n\r\n                                <td>\r\n                                    <img src={employee.picture.medium} alt=\"picture\"/>\r\n                                </td>\r\n                                <td>\r\n                                    {employee.name.first + \" \" + employee.name.last}\r\n                                </td>\r\n                                <td>\r\n                                    {employee.phone}\r\n                                </td>\r\n                                <td>\r\n                                    {employee.email}\r\n                                </td>\r\n\r\n                            </tr>)\r\n                        }\r\n                    )\r\n                }\r\n            </table>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeTable\r\n","import './App.css';\n//importing in Axios package\nimport axios from 'axios';\n//importing in React with useEffect and UseState to use Hooks\nimport React, { useEffect, useState } from 'react';\n//importing in the EmployeeTable component to render the data pulled from the API\nimport EmployeeTable from \"./components/EmployeeTable\"\n\n// sets the state and uses axios to pull data from the randomuser API. The data will be used to render it in via the EmployeeTable component \nfunction App() {\n  //default state that uses the original array from the API pull\n  const [employees, setEmployees] = useState([]);\n  //state for the filtered results to rerender the page but not overwrite the original array\n  const [filteredemployees, setFilteredemployees] = useState([]);\n    useEffect(() => {\n    axios\n      .get(\"https://randomuser.me/api/?results=15&nat=us\")\n      .then((response) => {\n        setEmployees([...response.data.results]);\n        setFilteredemployees([...response.data.results]);\n        console.log(response);\n      });\n  }, []);\n\n    //this function will filter the employees array based on the content of the input box \n   function handleChange(e) {\n    // checking if props.employees contains data. This works\n    console.log(employees)\n    //this sets a variable to text currently in search box\n    const userInput = e.target.value;\n    // testing to see if data is being captured in search box. This works\n    console.log(userInput)\n    //filters the employee array to match entry in search box\n    const filteredList = employees.filter(item => {\n      console.log(item.name.last.toLowerCase());\n      console.log(userInput.toLowerCase())\n        if (item.name.last.toLowerCase() === userInput.toLowerCase()) {\n            return true\n        } \n        return false\n    })\n    //checks to see if array has been filtered. This does not work.\n    console.log(filteredList)\n    // updates state use the filteredList array\n    setFilteredemployees(filteredList)\n  \n}\n\n// function sortEmployees(filteredemployees) {\n// let sortedList = [...filteredemployees] \n// sortedList.sort((a,b) => {})\n\n// }\n  return (\n    <div className=\"App\">\n\n<div>\n                <h2>Search Employees</h2>\n\n            </div>\n            {/* Includes on OnChange event that will pass the value in the search box to the filter function above.  */}\n            <div>\n                <form>\n                    <input type=\"search\" onChange={handleChange} placeholder=\"Enter employee last name\" />\n\n                </form>\n            </div>\n\n           \n            <div>\n              <button>Sort Employees by Last Name</button>\n            </div>\n      {/* This is the EmployeeTable component with the employees state that was set above in the Axios call */}\n      <EmployeeTable employees={filteredemployees} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}